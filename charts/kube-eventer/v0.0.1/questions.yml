categories:
- kube-eventer
questions:
- variable: sinktarget
  required: true
  default: "dingtalk"
  description: "Sink"
  type: enum
  label: Sink
  group: "Sink Options"
  options:
    - "dingtalk"
    - "sls"
    - "elasticsearch"
    - "honeycomb"
    - "influxdb"
    - "kafka"
    - "mysql"
    - "wechat"
    - "webhook"
# dingtalk
- variable: sink.dingtalk.webhook_url
  default: ""
  type: string
  description: "Dingtalk Webhook URL"
  label: Dingtalk Webhook URL
  group: "Sink Options"
  required: true
  show_if: "sinktarget=dingtalk"
- variable: sink.dingtalk.label
  default: ""
  type: string
  description: "Custom labels on alerting message."
  label: Label
  group: "Sink Options"
  required: false
  show_if: "sinktarget=dingtalk"
- variable: sink.dingtalk.level
  default: ""
  type: enum
  description: "Level of event"
  label: Level
  group: "Sink Options"
  required: false
  show_if: "sinktarget=dingtalk"
  options:
    - "Normal"
    - "Warning"
- variable: sink.dingtalk.namespaces
  default: ""
  type: string
  description: "Namespaces to filter (defualt: all namespaces,use commas to separate multi namespaces)"
  label: Namespaces
  group: "Sink Options"
  required: false
  show_if: "sinktarget=dingtalk"
- variable: sink.dingtalk.kinds
  default: ""
  type: string
  description: "Kinds to filter (default: all kinds,use commas to separate multi kinds. Options: Node,Pod and so on.)"
  label: Kinds
  group: "Sink Options"
  required: false
  show_if: "sinktarget=dingtalk"
- variable: sink.dingtalk.msg_type
  default: ""
  type: enum
  description: "Type of message (default: text. Options: text and markdown. markdown ONLY SUPPORT ALIYUN PLATFORM)"
  label: Message Type
  group: "Sink Options"
  required: false
  show_if: "sinktarget=dingtalk"
  options:
    - "text"
    - "markdown"
- variable: sink.dingtalk.cluster_id
  default: ""
  type: string
  description: "Cluster ID"
  label: Cluster ID
  group: "Sink Options"
  required: true
  show_if: "sink.dingtalk.msg_type=markdown"
- variable: sink.dingtalk.region
  default: ""
  type: string
  description: "Region"
  label: Region
  group: "Sink Options"
  required: true
  show_if: "sink.dingtalk.msg_type=markdown"
# sls
- variable: sink.sls.sls_endpoint
  default: ""
  type: string
  description: "SLS endpoint"
  label: SLS Endpoint
  group: "Sink Options"
  required: true
  show_if: "sinktarget=sls"
- variable: sink.sls.project
  default: ""
  type: string
  description: "Project of SLS instance."
  label: Project
  group: "Sink Options"
  required: true
  show_if: "sinktarget=sls"
- variable: sink.sls.logStore
  default: ""
  type: string
  description: "logStore of SLS instance project"
  label: LogStore
  group: "Sink Options"
  required: true
  show_if: "sinktarget=sls"
- variable: sink.sls.topic
  default: ""
  type: string
  description: "topic for every log sent to SLS"
  label: Topic
  group: "Sink Options"
  required: false
  show_if: "sinktarget=sls"
# elasticsearch
- variable: sink.elasticsearch.es_server_url
  default: ""
  type: string
  description: "Elasticsearch es_server_url For multiple nodesï¼Œuse: ?nodes=http://foo.com:9200&nodes=http://bar.com:9200"
  label: Elasticsearch Server URL
  group: "Sink Options"
  required: true
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.index
  default: ""
  type: string
  description: "The index for metrics and events. The default is heapster"
  label: Index for metrics and events
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.esUserName
  default: ""
  type: string
  description: "The username if authentication is enabled"
  label: User Name
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.esUserSecret
  default: ""
  type: string
  description: "The password if authentication is enabled"
  label: User Secret
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.maxRetries
  default: ""
  type: string
  description: "The number of retries that the Elastic client will perform for a single request after before giving up and return an error. It is 0 by default, so retry is disabled by default."
  label: Max Retries
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.healthCheck
  default: ""
  type: string
  description: "Specifies if healthCheck are enabled by default. It is enabled by default. To disable, provide a negative boolean value like 0 or false."
  label: HealthCheck
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.sniff
  default: ""
  type: string
  description: "Specifies if the sniffer is enabled by default. It is enabled by default. To disable, provide a negative boolean value like 0 or false"
  label: Sniff
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.startupHealthcheckTimeout
  default: ""
  type: string
  description: "The time in seconds the healthCheck waits for a response from Elasticsearch on startup, i.e. when creating a client. The default value is 1"
  label: StartupHealthcheckTimeout
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.ver
  default: ""
  type: string
  description: "ElasticSearch cluster version, can be either 2, 5, 6 or 7. The default is 5"
  label: Version
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.bulkWorkers
  default: ""
  type: string
  description: "Number of workers for bulk processing. Default value is 5."
  label: bulkWorkers
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.cluster_name
  default: ""
  type: string
  description: "Cluster name for different Kubernetes clusters. Default value is default."
  label: Cluster Name
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
- variable: sink.elasticsearch.pipeline
  default: ""
  type: string
  description: "(optional; >ES5) Ingest Pipeline to process the documents. The default is disabled(empty value)"
  label: Pipeline
  group: "Sink Options"
  required: false
  show_if: "sinktarget=elasticsearch"
# honeycomb
- variable: sink.honeycomb.dataset
  default: ""
  type: string
  description: "Honeycomb Dataset to which to publish metrics/events"
  label: Dataset
  group: "Sink Options"
  required: false
  show_if: "sinktarget=honeycomb"
- variable: sink.honeycomb.writekey
  default: ""
  type: string
  description: "Honeycomb Write Key for your account"
  label: Writekey
  group: "Sink Options"
  required: true
  show_if: "sinktarget=honeycomb"
- variable: sink.honeycomb.apihost
  default: ""
  type: string
  description: "Option to send metrics to a different host (default: https://api.honeycomb.com) (optional)"
  label: ApiHost
  group: "Sink Options"
  required: false
  show_if: "sinktarget=honeycomb"
# influxdb
- variable: sink.influxdb.influxdb_url
  default: ""
  type: string
  description: "Influxdb server url"
  label: Influxdb URL
  group: "Sink Options"
  required: true
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.user
  default: ""
  type: string
  description: "InfluxDB username (default: root)"
  label: Username
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.pw
  default: ""
  type: string
  description: "InfluxDB password (default: root)"
  label: Password
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.db
  default: ""
  type: string
  description: "InfluxDB Database name (default: k8s)"
  label: Datebase Name
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.insecuressl
  default: ""
  type: string
  description: "Ignore SSL certificate validity (default: false)"
  label: Insecuressl
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.withfields
  default: ""
  type: string
  description: "Use InfluxDB fields (default: false)"
  label: Withfields
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
- variable: sink.influxdb.cluster_name
  default: ""
  type: string
  description: "Cluster name for different Kubernetes clusters. (default: default)"
  label: Cluster Name
  group: "Sink Options"
  required: false
  show_if: "sinktarget=influxdb"
# kafka
- variable: sink.kafka.brokers
  default: ""
  type: string
  description: "Kafka's brokers' list. For example: brokers=localhost:9092&brokers=localhost:9093"
  label: Brokers
  group: "Sink Options"
  required: true
  show_if: "sinktarget=kafka"
- variable: sink.kafka.eventstopic
  default: ""
  type: string
  description: "Kafka's topic for events. Default value : heapster-events."
  label: Events Topic
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.compression
  default: ""
  type: string
  description: "Kafka's compression for both topics. Must be gzip or none or snappy or lz4. Default value : none."
  label: Kafka Compression
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.user
  default: ""
  type: string
  description: "Kafka's SASL PLAIN username. Must be set with password option."
  label: Kafka User
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.password
  default: ""
  type: string
  description: "Kafka's SASL PLAIN password. Must be set with user option."
  label: Kafka Password
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.cacert
  default: ""
  type: string
  description: "Kafka's SSL Certificate Authority file path."
  label: Kafka cacert
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.cert
  default: ""
  type: string
  description: "Kafka's SSL Client Certificate file path (In case of Two-way SSL). Must be set with key option."
  label: Kafka Cert
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.key
  default: ""
  type: string
  description: "Kafka's SSL Client Private Key file path (In case of Two-way SSL). Must be set with cert option."
  label: Kafka Key
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
- variable: sink.kafka.insecuressl
  default: ""
  type: string
  description: "Kafka's Ignore SSL certificate validity. Default value : false."
  label: Insecuressl
  group: "Sink Options"
  required: false
  show_if: "sinktarget=kafka"
# mysql
- variable: sink.mysql.mysql_jdbc_url
  default: ""
  type: string
  description: "Mysql URL. For example: root:root@tcp(172.1.2.3:3306)/kube_event?charset=utf8"
  label: Mysql URL
  group: "Sink Options"
  required: true
  show_if: "sinktarget=mysql"
# wechat
- variable: sink.wechat.corp_id
  default: ""
  type: string
  description: "Your wechat CorpID"
  label: Corp Id
  group: "Sink Options"
  required: true
  show_if: "sinktarget=wechat"
- variable: sink.wechat.corp_secret
  default: ""
  type: string
  description: "Your wechat CorpSecret"
  label: Corp Secret
  group: "Sink Options"
  required: true
  show_if: "sinktarget=wechat"
- variable: sink.wechat.agent_id
  default: ""
  type: string
  description: "Your wechat AgentID"
  label: Agent Id
  group: "Sink Options"
  required: true
  show_if: "sinktarget=wechat"
- variable: sink.wechat.to_user
  default: ""
  type: string
  description: "send to user (defualt: @all)"
  label: To User
  group: "Sink Options"
  required: false
  show_if: "sinktarget=wechat"
- variable: sink.wechat.label
  default: ""
  type: string
  description: "Custom labels on alerting message.(such as clusterId)"
  label: Label
  group: "Sink Options"
  required: false
  show_if: "sinktarget=wechat"
- variable: sink.wechat.level
  default: ""
  type: enum
  description: "Level of event default: Warning"
  label: Level
  group: "Sink Options"
  required: false
  show_if: "sinktarget=wechat"
  options:
    - "Normal"
    - "Warning"
- variable: sink.wechat.namespaces
  default: ""
  type: string
  description: "Namespaces to filter (defualt: all namespaces,use commas to separate multi namespaces)"
  label: Namespaces
  group: "Sink Options"
  required: false
  show_if: "sinktarget=wechat"
- variable: sink.wechat.kinds
  default: ""
  type: string
  description: "Kinds to filter (default: all kinds,use commas to separate multi kinds. Options: Node,Pod and so on.)"
  label: Kinds
  group: "Sink Options"
  required: false
  show_if: "sinktarget=wechat"

# webhook
- variable: sink.webhook.webhook_url
  default: ""
  type: string
  description: "Webhook URL"
  label: Webhook URL
  group: "Sink Options"
  required: true
  show_if: "sinktarget=webhook"
- variable: sink.webhook.level
  default: ""
  type: enum
  description: "Level of event"
  label: Level
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
  options:
    - "Normal"
    - "Warning"
- variable: sink.webhook.namespaces
  default: ""
  type: string
  description: "Namespaces to filter (optional. default: all namespaces,use commas to separate multi namespaces, Regexp pattern support)"
  label: Namespaces
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
- variable: sink.webhook.kinds
  default: ""
  type: string
  description: "Kinds to filter (optional. default: all kinds,use commas to separate multi kinds. Options: Node,Pod and so on.)"
  label: Kinds
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
- variable: sink.webhook.reason
  default: ""
  type: string
  description: "Reason to filter (optional. default: empty, Regexp pattern support). You can use multi reason fields in query."
  label: Reason
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
- variable: sink.webhook.method
  default: ""
  type: string
  description: "Method to send request (optional. default: GET)"
  label: Method
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
- variable: sink.webhook.header
  default: ""
  type: string
  description: "Header in request (optional. default: empty). You can use multi header field in query."
  label: Header
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
- variable: sink.webhook.use_custom_body
  default: false
  type: boolean
  description: "Use custom request body template"
  label: Use custom request body
  group: "Sink Options"
  required: false
  show_if: "sinktarget=webhook"
  show_subquestion_if: true
  subquestions:
  - variable: sink.webhook.custom_body_configmap_name
    default: "kube-eventer-webhook-configmap"
    type: string
    description: "The configmap name of request body template. Modify the configmap data after deployed."
    label: Configmap Name
    required: false
    show_if: "sinktarget=webhook"
