apiVersion: apps/v1
kind: Deployment
metadata:
  name: orion-scheduler
  namespace: kube-system
  labels:
    app: orion-scheduler
spec:
  replicas: {{ .Values.scheduler.replicas }}
  selector:
    matchLabels:
      app: orion-scheduler
  template:
    metadata:
      labels:
        app: orion-scheduler
    spec:
      serviceAccountName: orion-scheduler
      volumes:
      - name: orion-scheduler-config
        configMap:
          name: orion-scheduler-config
      containers:
      - name: orion-scheduler-ctr
        image: '{{ .Values.scheduler.image.scheduler.repository }}:{{ default .Chart.AppVersion .Values.scheduler.image.scheduler.version }}'
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.imagePullSecrets }}
        imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
        {{- end }}
        args:
        - kube-scheduler
        - --config=/orion-scheduler/config.yaml
        - -v={{- .Values.scheduler.verbose }}
        volumeMounts:
        - name: orion-scheduler-config
          mountPath: /orion-scheduler
      - name: orion-scheduler-extender-ctr
        image: '{{ .Values.scheduler.image.extender.repository }}:{{ default .Chart.AppVersion .Values.scheduler.image.scheduler.version }}'
        env:
        - name: ORION_CONTROLLER
          # TODO how to make sure svc.cluster.local is the correct suffix?
          value: '{{ .Values.controller.service }}.{{- .Release.Namespace -}}.svc.cluster.local:{{ .Values.controller.port | atoi }}' 
        - name: ORION_API_VERSION
          value: '{{ default .Chart.AppVersion .Values.scheduler.apiVersion }}'
        - name: ORION_DATA_VERSION
          value: '{{ default .Chart.AppVersion .Values.scheduler.dataVersion }}'
        - name: MANAGED_ORION_SERVER
          # always true for helm chart
          value: "true" 
        - name: ORION_RES_NAME
          value: {{ .Values.resources.name }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.scheduler.port }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.scheduler.port }}
        ports:
          - containerPort: {{ .Values.scheduler.port }}
